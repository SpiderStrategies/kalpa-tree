@import "node_modules/lesshat/build/lesshat-prefixed";

@transition: 300ms ease-out;

.tree-container {
  background-color: #393c40;
  width: 100%;
  height: 100%;

  .tree {
    overflow: auto;
    width: 100%;
    height: 100%;

    .lh-user-select(none);

    // Show the expand/collapse indicators on hover
    &.forest-tree {
      &:hover {
        li.node {
          .toggler { .lh-opacity(1); }
        }
      }
      ul {
        li.node {
          .node-contents {
            margin: 6px;
          }
        }
      }
    }

    // Don't show it for the root node on normal trees
    &:hover {
      li.node:not(:first-child) {
        .toggler { .lh-opacity(1); }
      }
    }

    ul {
      list-style-type: none;
      padding: 0px;
      margin: 0px;
      .lh-translateX(0); // Specify 0 transform, otherwise we get overflow on nodes

      li.node {
        list-style: none;
        position: absolute;
        width: 100%;
        height: 36px;
        top: 0;
        left: 0;
        overflow-x: hidden;
        .lh-transition(transform @transition, opacity @transition);

        &.notransition {
          .lh-transition(none) !important;
          .node-contents {
            .lh-transition(none) !important;
            .toggler {
              .lh-transition(none) !important;
            }
          }
        }

        .node-contents {
          margin: 6px;
          margin-left: -6px;
          text-align: left;
          white-space: nowrap;
          .lh-transition(transform @transition, opacity @transition);

          .toggler {
            display: inline-block;
            vertical-align: middle;
            width: 14px;
            height: 14px;
            .lh-opacity(0);
            .lh-transform(rotate(0deg));
            .lh-transform-origin(7px 7px);
            .lh-transition(all @transition);

            svg {
              position: absolute;
              width: 100%;
              height: 100%;
              fill: #818b8f;
            }

            &.expanded { .lh-transform(rotate(90deg)); }
            &.leaf { visibility: hidden !important; }
          }

          svg.icon {
            display: inline-block;
            vertical-align: middle;
            margin-left: 4px;
            width: 14px;
            height: 14px;
          }

          .label {
            display: inline-block;
            vertical-align: middle;
            margin-left: 8px;
            color: #ADB8BC;
            font-size: 13px;
            text-shadow: 0 1px 0 rgba(0, 0, 0, 0.23);
          }
        }

        .label-mask {
          /* This is used to mask long label names on the nodes */
          position: absolute;
          width: 100px;
          height: 100%;
          top: 0;
          right: 0;
          .lh-background-image(linear-gradient(to right, rgba(57,60,64,0) 0%, #393c40 90%));

          &:after {
            content: "";
            position: absolute;
            width: 5px;
            height: 5px;
            top: 16px;
            right: 12px;
            border-radius: 50%;
          }

          &.indicator {
            .lh-background-image(linear-gradient(to right, rgba(57,60,64,0) 0%, #393c40 50%));
          }
        }

        &:not(.selected) {
          .icon { fill: grey !important; }
        }

        &.selected {
          background-color: #2d3135;

          &:before {
            content: "";
            left: 0;
            position: absolute;
            width: 3px;
            height: 100%;
            background-color: #E1E8EB;
          }

          .label { color: #E1E8EB; }
          .label-mask {
            .lh-background-image(linear-gradient(to right, rgba(45,49,53,0) 0%, #2d3135 90%));

            &.indicator {
              .lh-background-image(linear-gradient(to right, rgba(45,49,53,0) 0%, #2d3135 50%));
            }
          }
        }
      }
    }

    &.editable {
      li {
        cursor: pointer;
      }
    }
  }
}
